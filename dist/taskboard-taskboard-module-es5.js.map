{"version":3,"sources":["./src/app/taskboard/taskboard.component.html","./src/app/taskboard/taskboard-routing.module.ts","./src/app/taskboard/taskboard.component.scss","./src/app/taskboard/taskboard.component.ts","./src/app/taskboard/taskboard.model.ts","./src/app/taskboard/taskboard.module.ts","./src/app/taskboard/taskboard.service.ts"],"names":[],"mappings":"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","file":"taskboard-taskboard-module-es5.js","sourcesContent":["module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <div class=\\\"content-header\\\">Task Board</div>\\n    <p class=\\\"content-sub-header\\\"></p>\\n  </div>\\n</div>\\n<!-- Taskboard Starts -->\\n<section id=\\\"taskboard\\\">\\n  <div class=\\\"row taskboard\\\">\\n    <div class=\\\"col-md-3 col-12\\\">\\n      <h4 class=\\\"ml-2 mt-2 content-header\\\"><i class=\\\"icon-layers mr-1\\\"></i> Tasks</h4>\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' [dragulaModel]='todo'>\\n        <div *ngFor='let todo of todo'>\\n          <div class=\\\"card border-left my-4 border-primary border-3\\\">\\n            <div class=\\\"card-block pt-3\\\">\\n              <div class=\\\"clearfix\\\">\\n                <h5 class=\\\"text-bold-500 primary float-left\\\">{{todo.taskTitle}}</h5>\\n                <div class=\\\"actions float-right\\\">\\n                  <i class=\\\"ft-edit mr-1 info\\\"></i>\\n                  <i class=\\\"ft-trash-2 danger\\\"></i>\\n                </div>\\n              </div>\\n              <p>{{todo.taskMessage}}</p>\\n              <span class=\\\"primary display-inline-block pt-2\\\">{{todo.createdOn}}</span>\\n              <img [src]=\\\"[todo.assignedTo]\\\" class=\\\"rounded-circle width-50 mr-2 float-right\\\"> \\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-3 col-12\\\">\\n      <h4 class=\\\"ml-2 mt-2 content-header\\\"><i class=\\\"icon-pie-chart mr-1\\\"></i> Analyze</h4>\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' [dragulaModel]='inProcess'>\\n        <div *ngFor='let inProcess of inProcess'>\\n          <div class=\\\"card border-left my-4 border-info border-3\\\">\\n            <div class=\\\"card-block pt-3\\\">\\n              <div class=\\\"clearfix\\\">\\n                <h5 class=\\\"text-bold-500 info float-left\\\">{{inProcess.taskTitle}}</h5>\\n                <div class=\\\"actions float-right\\\">\\n                  <i class=\\\"ft-edit mr-1 info\\\"></i>\\n                  <i class=\\\"ft-trash-2 danger\\\"></i>\\n                </div>\\n              </div>\\n              <p>{{inProcess.taskMessage}}</p>\\n              <span class=\\\"info display-inline-block pt-2\\\">{{inProcess.createdOn}}</span>\\n              <img [src]=\\\"[inProcess.assignedTo]\\\" class=\\\"rounded-circle width-50 mr-2 float-right\\\"> \\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-3 col-12\\\">\\n      <h4 class=\\\"ml-2 mt-2 content-header\\\"><i class=\\\"icon-note mr-1\\\"></i>Test</h4>\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' [dragulaModel]='backLog'>\\n        <div *ngFor='let backLog of backLog'>\\n          <div class=\\\"card border-left my-4 border-warning border-3\\\">\\n            <div class=\\\"card-block pt-3\\\">\\n              <div class=\\\"clearfix\\\">\\n                <h5 class=\\\"text-bold-500 warning float-left\\\">{{backLog.taskTitle}}</h5>\\n                <div class=\\\"actions float-right\\\">\\n                  <i class=\\\"ft-edit mr-1 info\\\"></i>\\n                  <i class=\\\"ft-trash-2 danger\\\"></i>\\n                </div>\\n              </div>\\n              <p>{{backLog.taskMessage}}</p>\\n              <span class=\\\"warning display-inline-block pt-2\\\">{{backLog.createdOn}}</span>\\n              <img [src]=\\\"[backLog.assignedTo]\\\" class=\\\"rounded-circle width-50 mr-2 float-right\\\"> \\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-3 col-12\\\">\\n      <h4 class=\\\"ml-2 mt-2 content-header\\\"><i class=\\\"icon-like mr-1\\\"></i>Done</h4>\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' [dragulaModel]='completed'>\\n        <div *ngFor='let completed of completed'>\\n          <div class=\\\"card border-left my-4 border-success border-3\\\">\\n            <div class=\\\"card-block pt-3\\\">\\n              <div class=\\\"clearfix\\\">\\n                <h5 class=\\\"text-bold-500 success float-left\\\">{{completed.taskTitle}}</h5>\\n                <div class=\\\"actions float-right\\\">\\n                  <i class=\\\"ft-edit mr-1 info\\\"></i>\\n                  <i class=\\\"ft-trash-2 danger\\\"></i>\\n                </div>\\n              </div>\\n              <p>{{completed.taskMessage}}</p>\\n              <span class=\\\"success display-inline-block pt-2\\\">{{completed.createdOn}}</span>\\n              <img [src]=\\\"[completed.assignedTo]\\\" class=\\\"rounded-circle width-50 mr-2 float-right\\\"> \\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <section class=\\\"taskboard-app-form bg-blue-grey bg-lighten-5\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-block pt-3\\\">\\n        <h5 class=\\\"text-bold-500\\\">Create new Task</h5>\\n        <form class=\\\"taskboard-app-input row\\\">\\n          <fieldset class=\\\"form-group position-relative has-icon-left col-md-4 col-12 mb-1\\\">\\n            <div class=\\\"form-control-position\\\">\\n              <i class=\\\"icon-emoticon-smile\\\"></i>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"todoTitle\\\" placeholder=\\\"Title\\\" (keydown.enter)=\\\"$event.preventDefault()\\\"\\n              #todoTitle>\\n            <div class=\\\"form-control-position control-position-right\\\">\\n              <i class=\\\"ft-image\\\"></i>\\n            </div>\\n          </fieldset>\\n          <fieldset class=\\\"form-group position-relative has-icon-left col-md-6 col-12 mb-1\\\">\\n            <div class=\\\"form-control-position\\\">\\n              <i class=\\\"icon-emoticon-smile\\\"></i>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"todoMessage\\\" placeholder=\\\"Message\\\" (keydown.enter)=\\\"$event.preventDefault()\\\"\\n              #todoMessage>\\n            <div class=\\\"form-control-position control-position-right\\\">\\n              <i class=\\\"ft-image\\\"></i>\\n            </div>\\n          </fieldset>\\n         \\n          <fieldset class=\\\"form-group position-relative has-icon-left col-md-2 col-12 mb-1\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary\\\" (click)=\\\"onAddTask()\\\">\\n              <i class=\\\"fa fa-paper-plane-o hidden-lg-up\\\"></i> Create</button>\\n          </fieldset>\\n        </form>\\n      </div>\\n    </div>\\n  </section>\\n\\n</section>\\n<!-- Taskboard Ends -->\\n\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TaskboardComponent } from './taskboard.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n     component: TaskboardComponent,\n    data: {\n      title: 'Taskboard'\n    },\n    \n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TaskboardRoutingModule { }","module.exports = \".gh-fork {\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  border: 0;\\n}\\n\\n/* dragula-specific example page styles */\\n\\n.dragdrop-wrapper {\\n  display: table;\\n}\\n\\n/* .dragdrop-container {\\n  display: table-cell;\\n  background-color: rgba(255, 255, 255, 0.2);\\n  width: 25%;\\n} */\\n\\n.dragdrop-container:nth-child(odd) {\\n  background-color: rgba(0, 0, 0, 0.2);\\n}\\n\\n/*\\n * note that styling gu-mirror directly is a bad practice because it's too generic.\\n * you're better off giving the draggable elements a unique class and styling that directly!\\n */\\n\\n.dragdrop-container > div,\\n.gu-mirror {\\n  -webkit-transition: opacity 0.4s ease-in-out;\\n  transition: opacity 0.4s ease-in-out;\\n}\\n\\n.dragdrop-container > div {\\n  cursor: move;\\n  cursor: grab;\\n  cursor: -webkit-grab;\\n}\\n\\n.gu-mirror {\\n  cursor: grabbing;\\n  cursor: -webkit-grabbing;\\n}\\n\\n.dragdrop-container .ex-moved {\\n  background-color: #e74c3c;\\n}\\n\\n.dragdrop-container.ex-over {\\n  background-color: rgba(255, 255, 255, 0.3);\\n}\\n\\n#left-lovehandles > div,\\n#right-lovehandles > div {\\n  cursor: initial;\\n}\\n\\n.handle {\\n  padding: 0 5px;\\n  margin-right: 5px;\\n  background-color: rgba(0, 0, 0, 0.4);\\n  cursor: move;\\n}\\n\\n.image-thing {\\n  margin: 20px 0;\\n  display: block;\\n  text-align: center;\\n}\\n\\n.slack-join {\\n  position: absolute;\\n  font-weight: normal;\\n  font-size: 14px;\\n  right: 10px;\\n  top: 50%;\\n  margin-top: -8px;\\n  line-height: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFza2JvYXJkL0M6XFxNeSBGaWxlc1xcTXkgd29ya3NcXGFuZ3VsYXJcXGZyZWVsYW5jZVxcY29ob3JhL3NyY1xcYXBwXFx0YXNrYm9hcmRcXHRhc2tib2FyZC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvdGFza2JvYXJkL3Rhc2tib2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJLGVBQUE7RUFDQSxNQUFBO0VBQ0EsUUFBQTtFQUNBLFNBQUE7QUNBSjs7QURHRSx5Q0FBQTs7QUFDQTtFQUNFLGNBQUE7QUNBSjs7QURFRTs7OztHQUFBOztBQUtBO0VBQ0Usb0NBQUE7QUNDSjs7QURDRTs7O0VBQUE7O0FBSUE7O0VBS0UsNENBQUE7RUFBQSxvQ0FBQTtBQ0RKOztBREdFO0VBQ0UsWUFBQTtFQUNBLFlBQUE7RUFFQSxvQkFBQTtBQ0FKOztBREVFO0VBQ0UsZ0JBQUE7RUFFQSx3QkFBQTtBQ0NKOztBRENFO0VBQ0UseUJBQUE7QUNFSjs7QURBRTtFQUNFLDBDQUFBO0FDR0o7O0FEREU7O0VBRUUsZUFBQTtBQ0lKOztBREZFO0VBQ0UsY0FBQTtFQUNBLGlCQUFBO0VBQ0Esb0NBQUE7RUFDQSxZQUFBO0FDS0o7O0FESEU7RUFDRSxjQUFBO0VBQ0EsY0FBQTtFQUNBLGtCQUFBO0FDTUo7O0FESkU7RUFDRSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0EsZUFBQTtFQUNBLFdBQUE7RUFDQSxRQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtBQ09KIiwiZmlsZSI6InNyYy9hcHAvdGFza2JvYXJkL3Rhc2tib2FyZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiBcbi5naC1mb3JrIHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIGJvcmRlcjogMDtcbiAgfVxuICBcbiAgLyogZHJhZ3VsYS1zcGVjaWZpYyBleGFtcGxlIHBhZ2Ugc3R5bGVzICovXG4gIC5kcmFnZHJvcC13cmFwcGVyIHtcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgfVxuICAvKiAuZHJhZ2Ryb3AtY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKTtcbiAgICB3aWR0aDogMjUlO1xuICB9ICovXG4gIC5kcmFnZHJvcC1jb250YWluZXI6bnRoLWNoaWxkKG9kZCkge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgfVxuICAvKlxuICAgKiBub3RlIHRoYXQgc3R5bGluZyBndS1taXJyb3IgZGlyZWN0bHkgaXMgYSBiYWQgcHJhY3RpY2UgYmVjYXVzZSBpdCdzIHRvbyBnZW5lcmljLlxuICAgKiB5b3UncmUgYmV0dGVyIG9mZiBnaXZpbmcgdGhlIGRyYWdnYWJsZSBlbGVtZW50cyBhIHVuaXF1ZSBjbGFzcyBhbmQgc3R5bGluZyB0aGF0IGRpcmVjdGx5IVxuICAgKi9cbiAgLmRyYWdkcm9wLWNvbnRhaW5lciA+IGRpdixcbiAgLmd1LW1pcnJvciB7XG4gICAgLy8gbWFyZ2luOiAxMHB4O1xuICAgIC8vIHBhZGRpbmc6IDEwcHg7XG4gICAgLy8gYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC40cyBlYXNlLWluLW91dDtcbiAgfVxuICAuZHJhZ2Ryb3AtY29udGFpbmVyID4gZGl2IHtcbiAgICBjdXJzb3I6IG1vdmU7XG4gICAgY3Vyc29yOiBncmFiO1xuICAgIGN1cnNvcjogLW1vei1ncmFiO1xuICAgIGN1cnNvcjogLXdlYmtpdC1ncmFiO1xuICB9XG4gIC5ndS1taXJyb3Ige1xuICAgIGN1cnNvcjogZ3JhYmJpbmc7XG4gICAgY3Vyc29yOiAtbW96LWdyYWJiaW5nO1xuICAgIGN1cnNvcjogLXdlYmtpdC1ncmFiYmluZztcbiAgfVxuICAuZHJhZ2Ryb3AtY29udGFpbmVyIC5leC1tb3ZlZCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U3NGMzYztcbiAgfVxuICAuZHJhZ2Ryb3AtY29udGFpbmVyLmV4LW92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKTtcbiAgfVxuICAjbGVmdC1sb3ZlaGFuZGxlcyA+IGRpdixcbiAgI3JpZ2h0LWxvdmVoYW5kbGVzID4gZGl2IHtcbiAgICBjdXJzb3I6IGluaXRpYWw7XG4gIH1cbiAgLmhhbmRsZSB7XG4gICAgcGFkZGluZzogMCA1cHg7XG4gICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjQpO1xuICAgIGN1cnNvcjogbW92ZTtcbiAgfVxuICAuaW1hZ2UtdGhpbmcge1xuICAgIG1hcmdpbjogMjBweCAwO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuICAuc2xhY2stam9pbiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIHJpZ2h0OiAxMHB4O1xuICAgIHRvcDogNTAlO1xuICAgIG1hcmdpbi10b3A6IC04cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIH1cbiAgIiwiLmdoLWZvcmsge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvcmRlcjogMDtcbn1cblxuLyogZHJhZ3VsYS1zcGVjaWZpYyBleGFtcGxlIHBhZ2Ugc3R5bGVzICovXG4uZHJhZ2Ryb3Atd3JhcHBlciB7XG4gIGRpc3BsYXk6IHRhYmxlO1xufVxuXG4vKiAuZHJhZ2Ryb3AtY29udGFpbmVyIHtcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpO1xuICB3aWR0aDogMjUlO1xufSAqL1xuLmRyYWdkcm9wLWNvbnRhaW5lcjpudGgtY2hpbGQob2RkKSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yKTtcbn1cblxuLypcbiAqIG5vdGUgdGhhdCBzdHlsaW5nIGd1LW1pcnJvciBkaXJlY3RseSBpcyBhIGJhZCBwcmFjdGljZSBiZWNhdXNlIGl0J3MgdG9vIGdlbmVyaWMuXG4gKiB5b3UncmUgYmV0dGVyIG9mZiBnaXZpbmcgdGhlIGRyYWdnYWJsZSBlbGVtZW50cyBhIHVuaXF1ZSBjbGFzcyBhbmQgc3R5bGluZyB0aGF0IGRpcmVjdGx5IVxuICovXG4uZHJhZ2Ryb3AtY29udGFpbmVyID4gZGl2LFxuLmd1LW1pcnJvciB7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC40cyBlYXNlLWluLW91dDtcbn1cblxuLmRyYWdkcm9wLWNvbnRhaW5lciA+IGRpdiB7XG4gIGN1cnNvcjogbW92ZTtcbiAgY3Vyc29yOiBncmFiO1xuICBjdXJzb3I6IC1tb3otZ3JhYjtcbiAgY3Vyc29yOiAtd2Via2l0LWdyYWI7XG59XG5cbi5ndS1taXJyb3Ige1xuICBjdXJzb3I6IGdyYWJiaW5nO1xuICBjdXJzb3I6IC1tb3otZ3JhYmJpbmc7XG4gIGN1cnNvcjogLXdlYmtpdC1ncmFiYmluZztcbn1cblxuLmRyYWdkcm9wLWNvbnRhaW5lciAuZXgtbW92ZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTc0YzNjO1xufVxuXG4uZHJhZ2Ryb3AtY29udGFpbmVyLmV4LW92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMyk7XG59XG5cbiNsZWZ0LWxvdmVoYW5kbGVzID4gZGl2LFxuI3JpZ2h0LWxvdmVoYW5kbGVzID4gZGl2IHtcbiAgY3Vyc29yOiBpbml0aWFsO1xufVxuXG4uaGFuZGxlIHtcbiAgcGFkZGluZzogMCA1cHg7XG4gIG1hcmdpbi1yaWdodDogNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gIGN1cnNvcjogbW92ZTtcbn1cblxuLmltYWdlLXRoaW5nIHtcbiAgbWFyZ2luOiAyMHB4IDA7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5zbGFjay1qb2luIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXNpemU6IDE0cHg7XG4gIHJpZ2h0OiAxMHB4O1xuICB0b3A6IDUwJTtcbiAgbWFyZ2luLXRvcDogLThweDtcbiAgbGluZS1oZWlnaHQ6IDE2cHg7XG59Il19 */\"","import { Component, ViewEncapsulation, ViewChild, ElementRef } from '@angular/core';\nimport { TaskBoardService } from './taskboard.service';\nimport { Task } from './taskboard.model';\n\n@Component({\n  selector: 'app-taskboard',\n  templateUrl: './taskboard.component.html',\n  styleUrls: ['./taskboard.component.scss'],\n  providers: [TaskBoardService],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TaskboardComponent  {\n\n  @ViewChild('todoTitle', { static: true }) titleInputRef: ElementRef;\n  @ViewChild('todoMessage', { static: true }) messageInputRef: ElementRef;\n  \n  public todo:Task[];\n  public inProcess:Task[];\n  public backLog:Task[];\n  public completed:Task[];\n\n  constructor(private elRef: ElementRef, private taskBoardService: TaskBoardService) {\n    this.todo = taskBoardService.todo;\n    this.inProcess = taskBoardService.inProcess;\n    this.backLog = taskBoardService.backLog;\n    this.completed = taskBoardService.completed;\n  }\n\n  onAddTask() {\n    if (this.messageInputRef.nativeElement.value != \"\" && this.titleInputRef.nativeElement.value != \"\") {\n      this.taskBoardService.addNewTask(this.titleInputRef.nativeElement.value, this.messageInputRef.nativeElement.value);\n      this.todo = this.taskBoardService.gettodo();\n    }\n    this.titleInputRef.nativeElement.value = \"\";\n    this.messageInputRef.nativeElement.value = \"\";\n    this.titleInputRef.nativeElement.focus();\n  }\n\n\n}\n","export class Task {\n    public taskTitle: string;\n    public taskMessage: string;\n    public createdOn: string;\n    public createdBy: string;\n    public assignedTo: string;\n    public status: string;\n  \n    constructor(taskTitle: string, taskMessage:string, createdOn: string, createdBy: string, assignedTo: string, status: string) {\n      this.taskTitle = taskTitle;\n      this.taskMessage = taskMessage;\n      this.createdOn = createdOn;\n      this.createdBy = createdBy;\n      this.assignedTo = assignedTo;\n      this.status = status;\n    }\n  }\n  ","import { NgModule } from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\n\nimport { DragulaModule } from 'ng2-dragula';\nimport { TaskboardRoutingModule } from \"./taskboard-routing.module\";\n\nimport { TaskboardComponent } from \"./taskboard.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TaskboardRoutingModule,\n        DragulaModule\n    ],\n    declarations: [\n        TaskboardComponent\n    ]\n})\nexport class TaskboardModule { }\n","import { Injectable } from '@angular/core';\nimport { Task } from './taskboard.model';\n\n@Injectable()\nexport class TaskBoardService {\n\n    constructor() { }\n\n    public todo: Task[] = [\n        new Task(\n            'Responsive',\n            'Dragée cupcake powder jelly-o ice cream toffee donut.',\n            'Feb 17',\n            'Eliza Scott',\n            'assets/img/portrait/small/avatar-s-3.jpg',\n            'New'),\n        new Task(\n            'QA Testing',\n            'Dragée cupcake powder jelly-o ice cream toffee donut.',\n            'Feb 17',\n            'Eliza Scott',\n            'assets/img/portrait/small/avatar-s-3.jpg',\n            'New'),\n        new Task(\n            'Budget',\n            'Dragée cupcake powder jelly-o ice cream toffee donut.',\n            'Feb 17',\n            'Eliza Scott',\n            'assets/img/portrait/small/avatar-s-3.jpg',\n            'New')\n    ];\n\n    public inProcess: Task[] = [\n        new Task(\n            'checklist',\n            'Dragée cupcake powder jelly-o ice cream toffee donut.',\n            'Dec 11',\n            'Bruce Lee',\n            'assets/img/portrait/small/avatar-s-1.jpg',\n            'In Process'),\n        new Task(\n            'Navigation',\n            'Dragée cupcake powder jelly-o ice cream toffee donut.',\n            'Dec 11',\n            'Bruce Lee',\n            'assets/img/portrait/small/avatar-s-1.jpg',\n            'In Process'),\n        new Task(\n            'Bootstrap 4',\n            'Dragée cupcake powder jelly-o ice cream toffee donut.',\n            'Dec 11',\n            'Bruce Lee',\n            'assets/img/portrait/small/avatar-s-1.jpg',\n            'In Process')\n    ];\n\n    public backLog: Task[] = [\n        new Task(\n            'Assessment',\n            'Dragée cupcake powder jelly-o ice cream toffee donut.',\n            'July 9',\n            'Parsy Reyes',\n            'assets/img/portrait/small/avatar-s-5.jpg',\n            'Pending'),\n        new Task(\n            'Schedule',\n            'Dragée cupcake powder jelly-o ice cream toffee donut.',\n            'July 9',\n            'Parsy Reyes',\n            'assets/img/portrait/small/avatar-s-5.jpg',\n            'Pending'),\n        new Task(\n            'Unit tests',\n            'Dragée cupcake powder jelly-o ice cream toffee donut.',\n            'July 9',\n            'Parsy Reyes',\n            'assets/img/portrait/small/avatar-s-5.jpg',\n            'Pending')\n    ];\n\n    public completed: Task[] = [\n        new Task(\n            'Angular 5',\n            'Dragée cupcake powder jelly-o ice cream toffee donut.',\n            'May 28',\n            'Faran Ali',\n            'assets/img/portrait/small/avatar-s-7.jpg',\n            'Completed'),\n        new Task(\n            'Fields',\n            'Dragée cupcake powder jelly-o ice cream toffee donut.',\n            'May 28',\n            'Faran Ali',\n            'assets/img/portrait/small/avatar-s-7.jpg',\n            'Completed'),\n        new Task(\n            'Task board',\n            'Dragée cupcake powder jelly-o ice cream toffee donut.',\n            'May 28',\n            'Faran Ali',\n            'assets/img/portrait/small/avatar-s-7.jpg',\n            'Completed')\n    ];\n\n    addNewTask(title: string, message: string) {\n        this.todo.push(new Task(\n            title,\n            message,\n            'Nov 12',\n            'Eliza Scott',\n            'assets/img/portrait/small/avatar-s-3.jpg',\n            'New'\n        ))\n    }\n    gettodo() {\n        return this.todo;\n      }\n}"],"sourceRoot":""}