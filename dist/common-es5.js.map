{"version":3,"sources":["./src/app/shared/directives/match-height.directive.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAGuB;AAKvB;IAKI,8BAAoB,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;IAClC,CAAC;IAED,8CAAe,GAAf;QAAA,iBAGC;QAFG,qCAAqC;QACrC,UAAU,CAAC,cAAQ,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,EAAE,CAAC,aAAa,EAAE,KAAI,CAAC,WAAW,CAAE,GAAC,EAAE,GAAG,CAAC,CAAC;IAC1F,CAAC;IAED,2CAAY,GAAZ,UAAa,MAAmB,EAAE,SAAiB;QAC/C,0BAA0B;QAE1B,IAAI,CAAC,MAAM;YAAE,OAAO;QAEpB,mEAAmE;QACnE,IAAM,QAAQ,GAAG,MAAM,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;QAE1D,IAAI,CAAC,QAAQ;YAAE,OAAO;QAEtB,sDAAsD;QACtD,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAC,CAAc;YACxC,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,8CAA8C;QAC9C,IAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC;aACnC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,qBAAqB,EAAE,CAAC,MAAM,EAAhC,CAAgC,CAAC,CAAC;QAEhD,gCAAgC;QAChC,IAAM,SAAS,GAAG,WAAW,CAAC,MAAM,CAAC,UAAC,IAAI,EAAE,IAAI;YAC5C,OAAO,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;QACrC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEN,8DAA8D;QAC9D,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC;aACf,OAAO,CAAC,UAAC,CAAc,IAAK,QAAC,CAAC,KAAK,CAAC,MAAM,GAAM,SAAS,OAAI,EAAjC,CAAiC,CAAC,CAAC;IACxE,CAAC;IAGD,uCAAQ,GAAR;QACI,qCAAqC;QACrC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAE,CAAC;IAChE,CAAC;;gBAzCuB,wDAAU;;IAFlC;QADC,2DAAK,EAAE;;6DACa;IAwCrB;QADC,kEAAY,CAAC,eAAe,CAAC;;;;wDAI7B;IA9CQ,oBAAoB;QAHhC,+DAAS,CAAC;YACP,QAAQ,EAAE,eAAe;SAC5B,CAAC;+EAM0B,wDAAU;OALzB,oBAAoB,CA+ChC;IAAD,2BAAC;CAAA;AA/CgC;AAsDjC;IAAA;IAAiC,CAAC;IAArB,iBAAiB;QAL7B,8DAAQ,CAAC;YACN,YAAY,EAAE,CAAC,oBAAoB,CAAC;YACpC,OAAO,EAAE,CAAC,oBAAoB,CAAC;SAClC,CAAC;OAEW,iBAAiB,CAAI;IAAD,wBAAC;CAAA;AAAJ","file":"common-es5.js","sourcesContent":["import {\n    Directive, ElementRef, AfterViewInit,\n    Input, HostListener, NgModule\n} from '@angular/core';\n\n@Directive({\n    selector: '[matchHeight]'\n})\nexport class MatchHeightDirective implements AfterViewInit {\n    // class name to match height\n    @Input()\n    matchHeight : string;\n\n    constructor(private el: ElementRef) {\n    }\n\n    ngAfterViewInit() {\n        // call our matchHeight function here\n        setTimeout(() => { this.matchHeights(this.el.nativeElement, this.matchHeight )}, 300);\n    }\n\n    matchHeights(parent: HTMLElement, className: string) {\n        // match height logic here\n\n        if (!parent) return;\n\n        // step 1: find all the child elements with the selected class name\n        const children = parent.getElementsByClassName(className);\n\n        if (!children) return;\n\n        //PIXINVENT - Match hight - fix --- comment below code\n        Array.from(children).forEach((x: HTMLElement) => {\n            x.style.height = 'initial';\n        });\n\n        // step 2a: get all the child elements heights\n        const itemHeights = Array.from(children)\n            .map(x => x.getBoundingClientRect().height);\n\n        // step 2b: find out the tallest\n        const maxHeight = itemHeights.reduce((prev, curr) => {\n            return curr > prev ? curr : prev;\n        }, 0);\n\n        // step 3: update all the child elements to the tallest height\n        Array.from(children)\n            .forEach((x: HTMLElement) => x.style.height = `${maxHeight}px`);\n    }\n\n    @HostListener('window:resize')\n    onResize() {\n        // call our matchHeight function here\n        this.matchHeights(this.el.nativeElement, this.matchHeight );\n    }\n}\n\n@NgModule({\n    declarations: [MatchHeightDirective],\n    exports: [MatchHeightDirective]\n})\n\nexport class MatchHeightModule { }"],"sourceRoot":""}