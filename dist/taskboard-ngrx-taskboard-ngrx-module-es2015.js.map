{"version":3,"sources":["./src/app/taskboard-ngrx/taskboard-ngrx.component.html","./src/app/taskboard-ngrx/store/taskboard.actions.ts","./src/app/taskboard-ngrx/store/taskboard.reducers.ts","./src/app/taskboard-ngrx/taskboard-ngrx-routing.module.ts","./src/app/taskboard-ngrx/taskboard-ngrx.component.scss","./src/app/taskboard-ngrx/taskboard-ngrx.component.ts","./src/app/taskboard-ngrx/taskboard-ngrx.model.ts","./src/app/taskboard-ngrx/taskboard-ngrx.module.ts"],"names":[],"mappings":"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","file":"taskboard-ngrx-taskboard-ngrx-module-es2015.js","sourcesContent":["module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <div class=\\\"content-header\\\">Task Board NgRx</div>\\n    <p class=\\\"content-sub-header\\\"></p>\\n  </div>\\n</div>\\n<!-- Taskboard Starts -->\\n<section id=\\\"taskboard\\\">\\n\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3 col-12\\\">\\n      <h4 class=\\\"ml-2 mt-2 content-header\\\"><i class=\\\"icon-layers mr-1\\\"></i> Tasks</h4>\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' [dragulaModel]='todo'>\\n        <div *ngFor='let todo of todo'>\\n          <div class=\\\"card border-left my-4 border-primary border-3\\\">\\n            <div class=\\\"card-block pt-3\\\">\\n              <div class=\\\"clearfix\\\">\\n                <h5 class=\\\"text-bold-500 primary float-left\\\">{{todo.taskTitle}}</h5>\\n                <div class=\\\"actions float-right\\\">\\n                  <i class=\\\"ft-edit mr-1 info\\\"></i>\\n                  <i class=\\\"ft-trash-2 danger\\\"></i>\\n                </div>\\n              </div>\\n              <p>{{todo.taskMessage}}</p>\\n              <span class=\\\"primary display-inline-block pt-2\\\">{{todo.createdOn}}</span>\\n              <img [src]=\\\"[todo.assignedTo]\\\" class=\\\"rounded-circle width-50 mr-2 float-right\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-3 col-12\\\">\\n      <h4 class=\\\"ml-2 mt-2 content-header\\\"><i class=\\\"icon-pie-chart mr-1\\\"></i> Analyze</h4>\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' [dragulaModel]='inProcess'>\\n        <div *ngFor='let inProcess of inProcess'>\\n          <div class=\\\"card border-left my-4 border-info border-3\\\">\\n            <div class=\\\"card-block pt-3\\\">\\n              <div class=\\\"clearfix\\\">\\n                <h5 class=\\\"text-bold-500 info float-left\\\">{{inProcess.taskTitle}}</h5>\\n                <div class=\\\"actions float-right\\\">\\n                  <i class=\\\"ft-edit mr-1 info\\\"></i>\\n                  <i class=\\\"ft-trash-2 danger\\\"></i>\\n                </div>\\n              </div>\\n              <p>{{inProcess.taskMessage}}</p>\\n              <span class=\\\"info display-inline-block pt-2\\\">{{inProcess.createdOn}}</span>\\n              <img [src]=\\\"[inProcess.assignedTo]\\\" class=\\\"rounded-circle width-50 mr-2 float-right\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-3 col-12\\\">\\n      <h4 class=\\\"ml-2 mt-2 content-header\\\"><i class=\\\"icon-note mr-1\\\"></i>Test</h4>\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' [dragulaModel]='backLog'>\\n        <div *ngFor='let backLog of backLog'>\\n          <div class=\\\"card border-left my-4 border-warning border-3\\\">\\n            <div class=\\\"card-block pt-3\\\">\\n              <div class=\\\"clearfix\\\">\\n                <h5 class=\\\"text-bold-500 warning float-left\\\">{{backLog.taskTitle}}</h5>\\n                <div class=\\\"actions float-right\\\">\\n                  <i class=\\\"ft-edit mr-1 info\\\"></i>\\n                  <i class=\\\"ft-trash-2 danger\\\"></i>\\n                </div>\\n              </div>\\n              <p>{{backLog.taskMessage}}</p>\\n              <span class=\\\"warning display-inline-block pt-2\\\">{{backLog.createdOn}}</span>\\n              <img [src]=\\\"[backLog.assignedTo]\\\" class=\\\"rounded-circle width-50 mr-2 float-right\\\"> \\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-3 col-12\\\">\\n      <h4 class=\\\"ml-2 mt-2 content-header\\\"><i class=\\\"icon-like mr-1\\\"></i>Done</h4>\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' [dragulaModel]='completed'>\\n        <div *ngFor='let completed of completed'>\\n          <div class=\\\"card border-left my-4 border-success border-3\\\">\\n            <div class=\\\"card-block pt-3\\\">\\n              <div class=\\\"clearfix\\\">\\n                <h5 class=\\\"text-bold-500 success float-left\\\">{{completed.taskTitle}}</h5>\\n                <div class=\\\"actions float-right\\\">\\n                  <i class=\\\"ft-edit mr-1 info\\\"></i>\\n                  <i class=\\\"ft-trash-2 danger\\\"></i>\\n                </div>\\n              </div>\\n              <p>{{completed.taskMessage}}</p>\\n              <span class=\\\"success display-inline-block pt-2\\\">{{completed.createdOn}}</span>\\n              <img [src]=\\\"[completed.assignedTo]\\\" class=\\\"rounded-circle width-50 mr-2 float-right\\\"> \\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <section class=\\\"taskboard-app-form bg-blue-grey bg-lighten-5\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-block pt-3\\\">\\n        <h5 class=\\\"text-bold-500\\\">Create new Task</h5>\\n        <form class=\\\"taskboard-app-input row\\\">\\n          <fieldset class=\\\"form-group position-relative has-icon-left col-md-4 col-12 mb-1\\\">\\n            <div class=\\\"form-control-position\\\">\\n              <i class=\\\"icon-emoticon-smile\\\"></i>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"todoTitle\\\" placeholder=\\\"Title\\\" (keydown.enter)=\\\"$event.preventDefault()\\\"\\n              #todoTitle>\\n            <div class=\\\"form-control-position control-position-right\\\">\\n              <i class=\\\"ft-image\\\"></i>\\n            </div>\\n          </fieldset>\\n          <fieldset class=\\\"form-group position-relative has-icon-left col-md-6 col-12 mb-1\\\">\\n            <div class=\\\"form-control-position\\\">\\n              <i class=\\\"icon-emoticon-smile\\\"></i>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"todoMessage\\\" placeholder=\\\"Message\\\" (keydown.enter)=\\\"$event.preventDefault()\\\"\\n              #todoMessage>\\n            <div class=\\\"form-control-position control-position-right\\\">\\n              <i class=\\\"ft-image\\\"></i>\\n            </div>\\n          </fieldset>\\n         \\n          <fieldset class=\\\"form-group position-relative has-icon-left col-md-2 col-12 mb-1\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary\\\" (click)=\\\"onAddTask()\\\">\\n              <i class=\\\"fa fa-paper-plane-o hidden-lg-up\\\"></i> Create</button>\\n          </fieldset>\\n        </form>\\n      </div>\\n    </div>\\n  </section>\\n\\n</section>\\n<!-- Taskboard Ends -->\\n\\n\"","import { Action } from '@ngrx/store';\n\nimport { Task } from '../taskboard-ngrx.model';\n\nexport const ADD_TODO = 'ADD_TODO';\n\nexport class AddTodo implements Action {\n    readonly type = ADD_TODO;\n    constructor(public payload: Task) { }\n}\n\nexport type TaskActions = AddTodo;\n","import { Task } from '../taskboard-ngrx.model';\nimport * as TaskActions from './taskboard.actions';\n\nexport interface FeatureState {\n    task: State;\n}\n\nexport interface State {\n    todo: Task[];\n    inProcess: Task[];\n    backLog: Task[];\n    completed: Task[];\n}\n\nconst initialState: State = {\n    todo: [\n        new Task(\n            'Responsive',\n            'Etiam porta sem malesuada magna mollis euismod.',\n            'May 17',\n            'Elizabeth Elliott',\n            'assets/img/portrait/small/avatar-s-3.jpg',\n            'New'),\n        new Task(\n            'QA Testing',\n            'Etiam porta sem malesuada magna mollis euismod.',\n            'May 17',\n            'Elizabeth Elliott',\n            'assets/img/portrait/small/avatar-s-3.jpg',\n            'New'),\n        new Task(\n            'Budget',\n            'Etiam porta sem malesuada magna mollis euismod.',\n            'May 17',\n            'Elizabeth Elliott',\n            'assets/img/portrait/small/avatar-s-3.jpg',\n            'New')\n    ],\n    inProcess: [\n        new Task(\n            'checklist',\n            'Etiam porta sem malesuada magna mollis euismod.',\n            'Apr 11',\n            'Bruce Reid',\n            'assets/img/portrait/small/avatar-s-1.jpg',\n            'In Process'),\n        new Task(\n            'Navigation',\n            'Etiam porta sem malesuada magna mollis euismod.',\n            'Apr 11',\n            'Bruce Reid',\n            'assets/img/portrait/small/avatar-s-1.jpg',\n            'In Process'),\n        new Task(\n            'Bootstrap 4',\n            'Etiam porta sem malesuada magna mollis euismod.',\n            'Apr 11',\n            'Bruce Reid',\n            'assets/img/portrait/small/avatar-s-1.jpg',\n            'In Process')\n    ],\n    backLog: [\n        new Task(\n            'Assessment',\n            'Etiam porta sem malesuada magna mollis euismod.',\n            'Jun 19',\n            'Kelly Reyes',\n            'assets/img/portrait/small/avatar-s-5.jpg',\n            'Pending'),\n        new Task(\n            'Schedule',\n            'Etiam porta sem malesuada magna mollis euismod.',\n            'Jun 19',\n            'Kelly Reyes',\n            'assets/img/portrait/small/avatar-s-5.jpg',\n            'Pending'),\n        new Task(\n            'Unit tests',\n            'Etiam porta sem malesuada magna mollis euismod.',\n            'Jun 19',\n            'Kelly Reyes',\n            'assets/img/portrait/small/avatar-s-5.jpg',\n            'Pending')\n    ],\n    completed: [\n        new Task(\n            'Angular 5',\n            'Etiam porta sem malesuada magna mollis euismod.',\n            'Aug 22',\n            'Sara Ali',\n            'assets/img/portrait/small/avatar-s-7.jpg',\n            'Completed'),\n        new Task(\n            'Fields',\n            'Etiam porta sem malesuada magna mollis euismod.',\n            'Aug 22',\n            'Sara Ali',\n            'assets/img/portrait/small/avatar-s-7.jpg',\n            'Completed'),\n        new Task(\n            'Task board',\n            'Etiam porta sem malesuada magna mollis euismod.',\n            'Aug 22',\n            'Sara Ali',\n            'assets/img/portrait/small/avatar-s-7.jpg',\n            'Completed')\n    ]\n\n};\n\nexport function taskReducer(state = initialState, action: TaskActions.TaskActions) {\n    switch (action.type) {\n        case (TaskActions.ADD_TODO):\n            const todo = [...state.todo];\n            return {\n                ...state,\n                todo: [...state.todo, action.payload]\n            };\n        default:\n            return state;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TaskboardNGRXComponent } from './taskboard-ngrx.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n     component: TaskboardNGRXComponent,\n    data: {\n      title: 'Taskboard'\n    },\n    \n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TaskboardNGRXRoutingModule { }","module.exports = \".gh-fork {\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  border: 0;\\n}\\n\\n/* dragula-specific example page styles */\\n\\n.dragdrop-wrapper {\\n  display: table;\\n}\\n\\n/* .dragdrop-container {\\n  display: table-cell;\\n  background-color: rgba(255, 255, 255, 0.2);\\n  width: 25%;\\n} */\\n\\n.dragdrop-container:nth-child(odd) {\\n  background-color: rgba(0, 0, 0, 0.2);\\n}\\n\\n/*\\n * note that styling gu-mirror directly is a bad practice because it's too generic.\\n * you're better off giving the draggable elements a unique class and styling that directly!\\n */\\n\\n.dragdrop-container > div,\\n.gu-mirror {\\n  -webkit-transition: opacity 0.4s ease-in-out;\\n  transition: opacity 0.4s ease-in-out;\\n}\\n\\n.dragdrop-container > div {\\n  cursor: move;\\n  cursor: grab;\\n  cursor: -webkit-grab;\\n}\\n\\n.gu-mirror {\\n  cursor: grabbing;\\n  cursor: -webkit-grabbing;\\n}\\n\\n.dragdrop-container .ex-moved {\\n  background-color: #e74c3c;\\n}\\n\\n.dragdrop-container.ex-over {\\n  background-color: rgba(255, 255, 255, 0.3);\\n}\\n\\n#left-lovehandles > div,\\n#right-lovehandles > div {\\n  cursor: initial;\\n}\\n\\n.handle {\\n  padding: 0 5px;\\n  margin-right: 5px;\\n  background-color: rgba(0, 0, 0, 0.4);\\n  cursor: move;\\n}\\n\\n.image-thing {\\n  margin: 20px 0;\\n  display: block;\\n  text-align: center;\\n}\\n\\n.slack-join {\\n  position: absolute;\\n  font-weight: normal;\\n  font-size: 14px;\\n  right: 10px;\\n  top: 50%;\\n  margin-top: -8px;\\n  line-height: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFza2JvYXJkLW5ncngvQzpcXE15IEZpbGVzXFxNeSB3b3Jrc1xcYW5ndWxhclxcZnJlZWxhbmNlXFxjb2hvcmEvc3JjXFxhcHBcXHRhc2tib2FyZC1uZ3J4XFx0YXNrYm9hcmQtbmdyeC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvdGFza2JvYXJkLW5ncngvdGFza2JvYXJkLW5ncnguY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxlQUFBO0VBQ0EsTUFBQTtFQUNBLFFBQUE7RUFDQSxTQUFBO0FDQUo7O0FER0UseUNBQUE7O0FBQ0E7RUFDRSxjQUFBO0FDQUo7O0FERUU7Ozs7R0FBQTs7QUFLQTtFQUNFLG9DQUFBO0FDQ0o7O0FEQ0U7OztFQUFBOztBQUlBOztFQUtFLDRDQUFBO0VBQUEsb0NBQUE7QUNESjs7QURHRTtFQUNFLFlBQUE7RUFDQSxZQUFBO0VBRUEsb0JBQUE7QUNBSjs7QURFRTtFQUNFLGdCQUFBO0VBRUEsd0JBQUE7QUNDSjs7QURDRTtFQUNFLHlCQUFBO0FDRUo7O0FEQUU7RUFDRSwwQ0FBQTtBQ0dKOztBRERFOztFQUVFLGVBQUE7QUNJSjs7QURGRTtFQUNFLGNBQUE7RUFDQSxpQkFBQTtFQUNBLG9DQUFBO0VBQ0EsWUFBQTtBQ0tKOztBREhFO0VBQ0UsY0FBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtBQ01KOztBREpFO0VBQ0Usa0JBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7RUFDQSxXQUFBO0VBQ0EsUUFBQTtFQUNBLGdCQUFBO0VBQ0EsaUJBQUE7QUNPSiIsImZpbGUiOiJzcmMvYXBwL3Rhc2tib2FyZC1uZ3J4L3Rhc2tib2FyZC1uZ3J4LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiIFxuLmdoLWZvcmsge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgYm9yZGVyOiAwO1xuICB9XG4gIFxuICAvKiBkcmFndWxhLXNwZWNpZmljIGV4YW1wbGUgcGFnZSBzdHlsZXMgKi9cbiAgLmRyYWdkcm9wLXdyYXBwZXIge1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICB9XG4gIC8qIC5kcmFnZHJvcC1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpO1xuICAgIHdpZHRoOiAyNSU7XG4gIH0gKi9cbiAgLmRyYWdkcm9wLWNvbnRhaW5lcjpudGgtY2hpbGQob2RkKSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjIpO1xuICB9XG4gIC8qXG4gICAqIG5vdGUgdGhhdCBzdHlsaW5nIGd1LW1pcnJvciBkaXJlY3RseSBpcyBhIGJhZCBwcmFjdGljZSBiZWNhdXNlIGl0J3MgdG9vIGdlbmVyaWMuXG4gICAqIHlvdSdyZSBiZXR0ZXIgb2ZmIGdpdmluZyB0aGUgZHJhZ2dhYmxlIGVsZW1lbnRzIGEgdW5pcXVlIGNsYXNzIGFuZCBzdHlsaW5nIHRoYXQgZGlyZWN0bHkhXG4gICAqL1xuICAuZHJhZ2Ryb3AtY29udGFpbmVyID4gZGl2LFxuICAuZ3UtbWlycm9yIHtcbiAgICAvLyBtYXJnaW46IDEwcHg7XG4gICAgLy8gcGFkZGluZzogMTBweDtcbiAgICAvLyBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMik7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjRzIGVhc2UtaW4tb3V0O1xuICB9XG4gIC5kcmFnZHJvcC1jb250YWluZXIgPiBkaXYge1xuICAgIGN1cnNvcjogbW92ZTtcbiAgICBjdXJzb3I6IGdyYWI7XG4gICAgY3Vyc29yOiAtbW96LWdyYWI7XG4gICAgY3Vyc29yOiAtd2Via2l0LWdyYWI7XG4gIH1cbiAgLmd1LW1pcnJvciB7XG4gICAgY3Vyc29yOiBncmFiYmluZztcbiAgICBjdXJzb3I6IC1tb3otZ3JhYmJpbmc7XG4gICAgY3Vyc29yOiAtd2Via2l0LWdyYWJiaW5nO1xuICB9XG4gIC5kcmFnZHJvcC1jb250YWluZXIgLmV4LW1vdmVkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTc0YzNjO1xuICB9XG4gIC5kcmFnZHJvcC1jb250YWluZXIuZXgtb3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpO1xuICB9XG4gICNsZWZ0LWxvdmVoYW5kbGVzID4gZGl2LFxuICAjcmlnaHQtbG92ZWhhbmRsZXMgPiBkaXYge1xuICAgIGN1cnNvcjogaW5pdGlhbDtcbiAgfVxuICAuaGFuZGxlIHtcbiAgICBwYWRkaW5nOiAwIDVweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gICAgY3Vyc29yOiBtb3ZlO1xuICB9XG4gIC5pbWFnZS10aGluZyB7XG4gICAgbWFyZ2luOiAyMHB4IDA7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG4gIC5zbGFjay1qb2luIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgcmlnaHQ6IDEwcHg7XG4gICAgdG9wOiA1MCU7XG4gICAgbWFyZ2luLXRvcDogLThweDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgfVxuICAiLCIuZ2gtZm9yayB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgYm9yZGVyOiAwO1xufVxuXG4vKiBkcmFndWxhLXNwZWNpZmljIGV4YW1wbGUgcGFnZSBzdHlsZXMgKi9cbi5kcmFnZHJvcC13cmFwcGVyIHtcbiAgZGlzcGxheTogdGFibGU7XG59XG5cbi8qIC5kcmFnZHJvcC1jb250YWluZXIge1xuICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMik7XG4gIHdpZHRoOiAyNSU7XG59ICovXG4uZHJhZ2Ryb3AtY29udGFpbmVyOm50aC1jaGlsZChvZGQpIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjIpO1xufVxuXG4vKlxuICogbm90ZSB0aGF0IHN0eWxpbmcgZ3UtbWlycm9yIGRpcmVjdGx5IGlzIGEgYmFkIHByYWN0aWNlIGJlY2F1c2UgaXQncyB0b28gZ2VuZXJpYy5cbiAqIHlvdSdyZSBiZXR0ZXIgb2ZmIGdpdmluZyB0aGUgZHJhZ2dhYmxlIGVsZW1lbnRzIGEgdW5pcXVlIGNsYXNzIGFuZCBzdHlsaW5nIHRoYXQgZGlyZWN0bHkhXG4gKi9cbi5kcmFnZHJvcC1jb250YWluZXIgPiBkaXYsXG4uZ3UtbWlycm9yIHtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjRzIGVhc2UtaW4tb3V0O1xufVxuXG4uZHJhZ2Ryb3AtY29udGFpbmVyID4gZGl2IHtcbiAgY3Vyc29yOiBtb3ZlO1xuICBjdXJzb3I6IGdyYWI7XG4gIGN1cnNvcjogLW1vei1ncmFiO1xuICBjdXJzb3I6IC13ZWJraXQtZ3JhYjtcbn1cblxuLmd1LW1pcnJvciB7XG4gIGN1cnNvcjogZ3JhYmJpbmc7XG4gIGN1cnNvcjogLW1vei1ncmFiYmluZztcbiAgY3Vyc29yOiAtd2Via2l0LWdyYWJiaW5nO1xufVxuXG4uZHJhZ2Ryb3AtY29udGFpbmVyIC5leC1tb3ZlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNzRjM2M7XG59XG5cbi5kcmFnZHJvcC1jb250YWluZXIuZXgtb3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKTtcbn1cblxuI2xlZnQtbG92ZWhhbmRsZXMgPiBkaXYsXG4jcmlnaHQtbG92ZWhhbmRsZXMgPiBkaXYge1xuICBjdXJzb3I6IGluaXRpYWw7XG59XG5cbi5oYW5kbGUge1xuICBwYWRkaW5nOiAwIDVweDtcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC40KTtcbiAgY3Vyc29yOiBtb3ZlO1xufVxuXG4uaW1hZ2UtdGhpbmcge1xuICBtYXJnaW46IDIwcHggMDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnNsYWNrLWpvaW4ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgcmlnaHQ6IDEwcHg7XG4gIHRvcDogNTAlO1xuICBtYXJnaW4tdG9wOiAtOHB4O1xuICBsaW5lLWhlaWdodDogMTZweDtcbn0iXX0= */\"","import { Component, ViewEncapsulation, ViewChild, ElementRef, OnInit } from '@angular/core';\nimport { Task } from './taskboard-ngrx.model';\n\nimport { Store } from '@ngrx/store';\nimport { Observable ,  Subscription } from 'rxjs';\n\nimport * as TaskboadActions from './store/taskboard.actions';\nimport * as fromTaskboard from './store/taskboard.reducers';\n\n@Component({\n  selector: 'app-ngrx-taskboard',\n  templateUrl: './taskboard-ngrx.component.html',\n  styleUrls: ['./taskboard-ngrx.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TaskboardNGRXComponent implements OnInit {\n\n  @ViewChild('todoTitle', { static: true }) titleInputRef: ElementRef;\n  @ViewChild('todoMessage', { static: true }) messageInputRef: ElementRef;\n  subscription: Subscription;\n  taskboardState: Observable<fromTaskboard.State>;\n\n  public todo: Task[];\n  public inProcess: Task[];\n  public backLog: Task[];\n  public completed: Task[];\n\n  constructor(private elRef: ElementRef, private store: Store<fromTaskboard.FeatureState>) {\n\n  }\n\n  ngOnInit() {\n    this.taskboardState = this.store.select('task');\n    this.subscription = this.taskboardState.subscribe(\n      data => {\n        this.todo = data.todo;\n        this.inProcess = data.inProcess;\n        this.backLog = data.backLog;\n        this.completed = data.completed;\n      }\n    );\n  }\n\n  onAddTask() {\n    if (this.messageInputRef.nativeElement.value != \"\" && this.titleInputRef.nativeElement.value != \"\") {\n      this.store.dispatch(new TaskboadActions.AddTodo(new Task(\n        this.titleInputRef.nativeElement.value,\n        this.messageInputRef.nativeElement.value,\n        'Nov 12',\n        'Elizabeth Elliott',\n        'assets/img/portrait/small/avatar-s-3.jpg',\n        'New'\n      )));\n    }\n    this.titleInputRef.nativeElement.value = \"\";\n    this.messageInputRef.nativeElement.value = \"\";\n    this.titleInputRef.nativeElement.focus();\n  }\n\n\n}\n","export class Task {\n    public taskTitle: string;\n    public taskMessage: string;\n    public createdOn: string;\n    public createdBy: string;\n    public assignedTo: string;\n    public status: string;\n  \n    constructor(taskTitle: string, taskMessage:string, createdOn: string, createdBy: string, assignedTo: string, status: string) {\n      this.taskTitle = taskTitle;\n      this.taskMessage = taskMessage;\n      this.createdOn = createdOn;\n      this.createdBy = createdBy;\n      this.assignedTo = assignedTo;\n      this.status = status;\n    }\n  }\n  ","import { NgModule } from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\nimport { StoreModule } from '@ngrx/store';\n\nimport { DragulaModule } from 'ng2-dragula';\nimport { TaskboardNGRXRoutingModule } from \"./taskboard-ngrx-routing.module\";\n\nimport { TaskboardNGRXComponent } from \"./taskboard-ngrx.component\";\nimport { taskReducer } from '../taskboard-ngrx/store/taskboard.reducers';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TaskboardNGRXRoutingModule,\n        DragulaModule,\n        StoreModule.forFeature('task', taskReducer)\n    ],\n    declarations: [\n        TaskboardNGRXComponent\n    ]\n})\nexport class TaskboardNGRXModule { }\n"],"sourceRoot":""}